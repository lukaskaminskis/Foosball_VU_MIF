//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ValidationService")]
public interface ValidationService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidationService/UsernamePatternMatch", ReplyAction="http://tempuri.org/ValidationService/UsernamePatternMatchResponse")]
    bool UsernamePatternMatch(string username);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidationService/UsernamePatternMatch", ReplyAction="http://tempuri.org/ValidationService/UsernamePatternMatchResponse")]
    System.Threading.Tasks.Task<bool> UsernamePatternMatchAsync(string username);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidationService/PasswordPatternMatch", ReplyAction="http://tempuri.org/ValidationService/PasswordPatternMatchResponse")]
    bool PasswordPatternMatch(string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidationService/PasswordPatternMatch", ReplyAction="http://tempuri.org/ValidationService/PasswordPatternMatchResponse")]
    System.Threading.Tasks.Task<bool> PasswordPatternMatchAsync(string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidationService/EmailPatternMatch", ReplyAction="http://tempuri.org/ValidationService/EmailPatternMatchResponse")]
    bool EmailPatternMatch(string email);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidationService/EmailPatternMatch", ReplyAction="http://tempuri.org/ValidationService/EmailPatternMatchResponse")]
    System.Threading.Tasks.Task<bool> EmailPatternMatchAsync(string email);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ValidationServiceChannel : ValidationService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ValidationServiceClient : System.ServiceModel.ClientBase<ValidationService>, ValidationService
{
    
    public ValidationServiceClient()
    {
    }
    
    public ValidationServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ValidationServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ValidationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ValidationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool UsernamePatternMatch(string username)
    {
        return base.Channel.UsernamePatternMatch(username);
    }
    
    public System.Threading.Tasks.Task<bool> UsernamePatternMatchAsync(string username)
    {
        return base.Channel.UsernamePatternMatchAsync(username);
    }
    
    public bool PasswordPatternMatch(string password)
    {
        return base.Channel.PasswordPatternMatch(password);
    }
    
    public System.Threading.Tasks.Task<bool> PasswordPatternMatchAsync(string password)
    {
        return base.Channel.PasswordPatternMatchAsync(password);
    }
    
    public bool EmailPatternMatch(string email)
    {
        return base.Channel.EmailPatternMatch(email);
    }
    
    public System.Threading.Tasks.Task<bool> EmailPatternMatchAsync(string email)
    {
        return base.Channel.EmailPatternMatchAsync(email);
    }
}
